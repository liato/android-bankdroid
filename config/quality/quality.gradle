apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

// Add checkstyle, findbugs and lint to the check task.
check.dependsOn 'checkstyle', 'findbugs', 'pmd'

task checkstyle(type: Checkstyle) {
    source 'src'
    include '**/*.java'
    classpath = files()
}

checkstyle {
    toolVersion '6.1.1' // TODO https://github.com/jshiell/checkstyle-idea/blob/dbe595028c3488400790e6caed2f122fba0bded1/README#L13-19
    ignoreFailures false
    configFile file("${project.rootDir}/config/quality/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/config/quality/checkstyle/suppressions.xml").absolutePath
}

task findbugs(type: FindBugs) {
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("${project.rootDir}/config/quality/findbugs/findbugs-filter.xml")

    source 'src'
    include '**/*.java'
    exclude '**/generated/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/findbugs/findbugs.xml"
        }
        html {
            destination "$project.buildDir/reports/findbugs/findbugs.html"
        }
    }

    classpath = files()
}

task pmd(type: Pmd) {
    ruleSetFiles = files("${project.rootDir}/config/quality/pmd/pmd-ruleset.xml")
    ignoreFailures = false
    consoleOutput = true
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/generated/**'

    reports {
        xml.enabled = true
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/pmd/pmd.xml"
        }
        html {
            destination "$project.buildDir/reports/pmd/pmd.html"
        }
    }
}

if (plugins.hasPlugin('android') || plugins.hasPlugin('com.android.library')) {
    check.dependsOn 'lint'
    tasks.getByName("findbugs").dependsOn 'compileDebugSources'
    tasks.getByName('findbugs').classes = files("$project.buildDir/intermediates/classes")
    android {
        lintOptions {
            abortOnError true
            warningsAsErrors true
            checkAllWarnings true

            // FIXME: This file contains *far* too many disabled checks. Somebody think of the children!
            lintConfig file("${project.rootDir}/config/quality/lint/lint.xml")

            textOutput "stdout"
            textReport true

            htmlReport true
            // optional path to report (default will be lint-results.html in the builddir)
            htmlOutput file("$project.buildDir/reports/lint/lint.html")
        }
    }
}
if (plugins.hasPlugin('java')) {
    tasks.getByName('findbugs').classes = files("$project.buildDir/classes")
    tasks.getByName('findbugs').dependsOn 'classes'
}
